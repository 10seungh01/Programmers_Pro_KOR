#include <string>
#include <cctype>
#include <map>
#include <cmath>
using namespace std;

int solution(string str1, string str2) {
    int answer = 0;
    std::map<std::string, std::pair<int,int>> map;
    
    for(int i=0; i<str1.length()-1; i++)
    {
        if(std::isalpha(str1[i]) && std::isalpha(str1[i+1]))
        {
            char c1=std::toupper(str1[i]);
            char c2=std::toupper(str1[i+1]);
            std::string str=std::to_string(c1)+std::to_string(c2);
            
            auto iter=map.find(str);
            if(iter==map.end())
                map[str]={1,0};
            else
                map[str].first++;
        }
    }
    
    for(int j=0; j<str2.length()-1; j++)
    {
        if(std::isalpha(str2[j]) && std::isalpha(str2[j+1]))
        {
            char c1=std::toupper(str2[j]);
            char c2=std::toupper(str2[j+1]);
            std::string str=std::to_string(c1)+std::to_string(c2);
            
            auto iter=map.find(str);
            if(iter==map.end())
                map[str]={0,1};
            else
                map[str].second++;
        }
    }
    
    float haap=0;
    float gyo=0;
    
    for(auto pos=map.begin(); pos!=map.end(); pos++)
    {
        haap+=std::max(pos->second.first, pos->second.second);
        gyo+=std::min(pos->second.first, pos->second.second);
    }
    
    if(gyo==0.0 && haap==0)
        return 65536;
    else if(gyo==0.0 && haap!=0)
        return 0;
    else
        return std::floor(65536*gyo/haap);
}
