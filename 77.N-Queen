#include <cmath>
#include <vector>

bool possible(int row, std::vector<int> *pos)
{
    for(int k=0; k<row; k++)
    {
        if((*pos)[k]==(*pos)[row]) return false;
        if(std::abs((*pos)[k]-(*pos)[row])==row-k) return false;
    }
    return true;
}

void recur(int row, int n, std::vector<int> *pos, int *ans)
{
    if(row==n)
    {
        (*ans)++;
        return;
    }
    
    for(int j=0; j<n; j++)
    {
        (*pos)[row]=j;
        if(possible(row, pos))
            recur(row+1, n, pos, ans);
    }
}

int solution(int n) {
    int answer = 0;
    int row=0;
    
    for(int i=0; i<n; i++)
    {
        std::vector<int> pos(n,-1);
        pos[row]=i;
        recur(row+1, n, &pos, &answer);
    }
    
    return answer;
}
